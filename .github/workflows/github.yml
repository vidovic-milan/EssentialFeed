- name: Xcodebuild Action
  # You may pin to the exact commit or the version.
  # uses: sersoft-gmbh/xcodebuild-action@085b0b324d8b72f8c81ebeab6c0426c7b2bef95e
  uses: sersoft-gmbh/xcodebuild-action@v2.0.1
  with:
    # The path to the xcodeproj to build. Mutually exclusive with `workspace` and `spm-package`. See also `xcodebuild`'s `-project`.
    project: EssentialFeed/EssentialFeed.xcodeproj
    # The path to the SPM package (folder containing Package.swift) to build. Mutually exclusive with `workspace` and `project`.
    scheme: CI
    # The target to build. See also `xcodebuild`'s `-target`.
    target: # optional
    # The destination specifier to build. See also `xcodebuild`'s `-destination`.
    destination: # optional
    # The configuration to build. See also `xcodebuild`'s `-configuration`.
    configuration: # optional
    # The SDK to use for building. See also `xcodebuild`'s `-sdk`.
    sdk: # optional
    # The architecture to use for building. See also `xcodebuild`'s `-arch`.
    arch: # optional
    # The path to an xcconfig file with build settings overrides. See also `xcodebuild`'s `-xcconfig`.
    xcconfig: # optional
    # The number of jobs to use for building. See also `xcodebuild`'s `-jobs`.
    jobs: # optional
    # If `true`, the targets will be built in parallel. See also `xcodebuild`'s `-parallelizeTargets`.
    parallelize-targets: # optional
    # If `true`, code coverage is enabled while testing. See also `xcodebuild`'s `-enableCodeCoverage`.
    enable-code-coverage: # optional
    # If `true`, tests are executed in parallel. See also `xcodebuild`'s `-parallel-testing-enabled`.
    parallel-testing-enabled: true
    # The maximum number of device destinations to run in parallel. See also `xcodebuild`'s `-maximum-concurrent-test-device-destinations`.
    maximum-concurrent-test-device-destinations: # optional
    # The maximum number of simulator destinations to run in parallel. See also `xcodebuild`'s `-maximum-concurrent-test-simulator-destinations`.
    maximum-concurrent-test-simulator-destinations: # optional
    # If `true`, xcodebuild won't print anything except warnings and errors. See also `xcodebuild`'s `-quiet`.
    quiet: # optional
    # If `true`, xcodebuild won't print the environment for shell build scripts. See also `xcodebuild`'s `-hideShellScriptEnvironment`.
    hide-shell-script-environment: # optional
    # Whether the address sanitizer should be enabled. See also `xcodebuild`'s `-enableAddressSanitizer`.
    enable-address-sanitizer: # optional
    # Whether the thread sanitizer should be enabled. See also `xcodebuild`'s `-enableThreadSanitizer`.
    enable-thread-sanitizer: # optional
    # Whether the undefined behavior sanitizer should be enabled. See also `xcodebuild`'s `-enableUndefinedBehaviorSanitizer`.
    enable-undefined-behavior-sanitizer: # optional
    # The path that should be used for the result bundle. See also `xcodebuild`'s `-resultBundlePath`.
    result-bundle-path: # optional
    # The version that should be used for the result bundle. See also `xcodebuild`'s `-resultBundleVersion`.
    result-bundle-version: # optional
    # The path that should be used for the cloning of remote packages. See also `xcodebuild`'s `-clonedSourcePackagesDirPath`.
    cloned-source-packages-path: # optional
    # The path that should be used for derived data. See also `xcodebuild`'s `-derivedDataPath`.
    derived-data-path: # optional
    # The path to a .xcroot to use for building and/or testing. See also `xcodebuild`'s `-xcroot`.
    xcroot: # optional
    # The path to a test run specification. See also `xcodebuild`'s `-xctestrun`.
    xctestrun: # optional
    # The name of the test plan associated with the scheme to use for testing. See also `xcodebuild`'s `-testPlan`.
    test-plan: # optional
    # A (line-separated) list of tests to run. See also `xcodebuild`'s `-only-testing`.
    only-testing: # optional
    # A (line-separated) list of tests to skip. See also `xcodebuild`'s `-skip-testing`.
    skip-testing: # optional
    # Whether unavailable actions should be skipped instead of failing the execution. See also `xcodebuild`'s `-skipUnavailableActions`.
    skip-unavailable-actions: # optional
    # Whether provisioning updates are allowed. See also `xcodebuild`'s `-allowProvisioningUpdates`.
    allow-provisioning-updates: # optional
    # Whether provisioning device registrations are allowed. See also `xcodebuild`'s `-allowProvisioningDeviceRegistration`.
    allow-provisioning-device-registration: # optional
    # Arbitrary, space separated build settings (e.g. PLATFORM_NAME=iphonesimulator).
    build-settings: # optional
    # The action to perform (e.g. build, test, ...). Can also contain multiple actions.
    action: clean, build, test
